

import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.Select;

public class Creer_commande {
    private WebDriver driver;
    private String baseUrl;
    private boolean acceptNextAlert = true;
    private StringBuffer verificationErrors = new StringBuffer();

    @Before
    public void setUp() throws Exception {
        String s = System.setProperty("webdriver.gecko.driver", "C:\\geckodriver-v0.26.0-win64\\geckodriver.exe");
        driver = new FirefoxDriver();
        baseUrl = "https://www.google.com/";
        driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
    }

    @Test
    public void testCreer_commande() throws Exception {
        driver.get("http://localhost/dolibarr/index.php");
        driver.findElement(By.id("username")).clear();
        driver.findElement(By.id("username")).sendKeys("admin");
        driver.findElement(By.id("username")).click();
        driver.findElement(By.id("password")).clear();
        driver.findElement(By.id("password")).sendKeys("chris");
        driver.findElement(By.id("password")).click();
        driver.findElement(By.xpath("//*[@id=\"login_line2\"]/input")).click();
        driver.findElement(By.xpath("//a[@id='mainmenua_commercial']/span")).click();
        driver.findElement(By.linkText("Nouvelle commande")).click();
        driver.findElement(By.xpath("//*[@id=\"id-right\"]/div/form/div[2]/table/tbody/tr[3]/td[2]/span/span[1]/span")).click();

        //new Select (driver.findElement(By.cssSelector("span.select2-search--dropdown.select2-search--dropdown--1"))).selectByVisibleText("client1");
        //driver.findElement(By.xpath("//*[@id=\"select2-socid-result-8arx-1\"]")).click();
        //*[@id="select2-socid-result-8arx-1"]

        driver.findElement(By.name("bouton")).click();
    }
    @After
    public void tearDown() throws Exception {
        //driver.quit();
        String verificationErrorString = verificationErrors.toString();
        if (!"".equals(verificationErrorString)) {
            fail(verificationErrorString);
        }
    }

    private boolean isElementPresent(By by) {
        try {
            driver.findElement(by);
            return true;
        } catch (NoSuchElementException e) {
            return false;
        }
    }

    private boolean isAlertPresent() {
        try {
            driver.switchTo().alert();
            return true;
        } catch (NoAlertPresentException e) {
            return false;
        }
    }

    private String closeAlertAndGetItsText() {
        try {
            Alert alert = driver.switchTo().alert();
            String alertText = alert.getText();
            if (acceptNextAlert) {
                alert.accept();
            } else {
                alert.dismiss();
            }
            return alertText;
        } finally {
            acceptNextAlert = true;
        }
    }
}
